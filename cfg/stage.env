#!/bin/bash
######################################################
## Script TV. Stage (stage1 and stage3). Subsystems
######################################################

bad_instance_error() {
    >&2 print_stack
    >&2 echo "SS ${ss}"
    >&2 echo "ss_network ${ss_network}"
    >&2 echo "ss_instance ${ss_instance}"
    >&2 echo "To capture problems on resolve function find and uncomment line containing code X810 at bin/build.sh "
    >&2 echo "KO 60111 bad_instance_error"
    exit 1
}

check_instance__central_infrastructure() {
    if [[ "_${ss_network}" != "_central" ]]; then
        bad_instance_error
    fi
    if [[ "_${ss_instance}" != "_lon" ]]; then
        bad_instance_error
    fi
}

check_instance__p2p_infrastructure() {
    if [[ "_${ss_network}" != "_testnet" ]] && [[ "_${ss_network}" != "_mainnet" ]]; then
        bad_instance_error
    fi
}

#helper function that can be used to install all P2P/node-related SS
#keywords (interpreted by SS's):
# network:  It can be any identifier (it will be used by SS's as NetworkId)
#   values used in production: {testnet|mainnet}
# instance:  It can be any identifier, 'genesis' is special and refers to Node0
#   values used in production: {genesis|user1|user}
#   genesis|user1 are deployed nodes
#   user is a distribution package (1liner node installer)
add_ss__node() {
    local network=$1
    local instance=$2
    if [[ -z $network ]]; then
        network=testnet
    fi
    if [[ -z $instance ]]; then
        instance=genesis
    fi
    add_ss os/scriptv ${network} ${instance}
    add_ss be/L1/script4 ${network} ${instance}
    add_ss be/L1/bridge_eth ${network} ${instance}
    add_ss be/wallet ${network} ${instance}
    add_ss fe/wallet ${network} ${instance}
    add_ss db/explorer ${network} ${instance}
    add_ss be/explorer ${network} ${instance}
    add_ss fe/explorer ${network} ${instance}
    # add_ss fe/stvtool ${network} ${instance}
}
