#!/bin/bash

function mk_target__set_vars {
    . ${system_home}/lib/mk_target/libbuild_systemd.env
    ss_led=red
    ss_KO_line="KO 29834 Compilation error."
    ss_version="1.0"
    ss_subdomain=""
    ss_deps_build__apt=""
    ss_deps_build__brew=""
    ss_deps_runtime__apt=""
    ss_deps_runtime__brew=""
    ss_deps=""
    ss_deps__hard=""
    ss_deps_git0__url="https://github.com/scriptnetwork/scriptv"
    ss_deps_git0__branch="master"
    ss_hostname=""
    ss_URL=""
    ss_L1_chain=mainnet
    ss_L1_seeds=""
    ss_L1_gov_NAT_mapports=false
    ss_L1_gov_listen_port=16672
    ss_L1_wallet_listen_port=16673
    bin_gov=${system_unix_name}__$(basename ${ss})_gov_${ss_version}
    bin_wallet=${system_unix_name}__$(basename ${ss})_wallet_${ss_version}
}

# --------------------- secrets
mk_target__secrets__version() {
    echo "1"
}

mk_target__secrets__print() {
    cat << EOF

EOF
}

mk_target__secrets__init() {
:
}
# -/------------------- secrets

function mk_target__libfn {
	cat << EOF
EOF
}

function mk_target__steps__pre_install {
	cat << EOF
EOF
}

function mk_target__steps__post_install {
	cat << EOF
EOF
}

function steps__pre_uninstall {
	cat << EOF
EOF
}

function mk_target__steps__post_uninstall {
    cat << EOF
EOF
}

function mk_target__declare_listening_tcp_ports {
    cat << EOF
1 ${ss_L1_gov_listen_port} L1_gov_p2p all
3 ${ss_L1_wallet_listen_port} L1_wallet all
EOF
}

function mk_target__systemctl_services {
    #list service names in start order
    svc_name "gov"
    svc_name "wallet"
}

function mk_target__declare_URLs {
    #list public URLs accessible with an internet browser
    cat << EOF
EOF
}

function do_clone {
	local url=${ss_deps_git0__url}
	local branch=${ss_deps_git0__branch}
	echo "Sourcecode from $url branch $branch"
	if [[ "_$url" == "_" ]]; then
		1>&2 echo "KO 40399 giturl"
		exit 1
	fi
	if [[ "_$branch" == "_" ]]; then
		1>&2 echo "KO 40398 branch"
		exit 1
	fi
	if [[ ! -d scriptv ]]; then
		echo "git clone -b ${branch} --single-branch ${url} scriptv"
		git clone -b ${branch} --single-branch ${url} scriptv
		r=$?
		if [[ $r -ne 0 ]]; then
			1>&2 echo "KO 40397 clone"
			exit 1
		fi
		echo "cloned source code"
	else
		echo "source code already obtained"
	fi
}
function do_build_bin {
    jaildir=$1
    echo "do_build_bin --> ${jaildir}"
    rm -rf _work
	mkdir -p _work
	pushd _work > /dev/null
        pwd
	    do_clone
	    pushd scriptv > /dev/null
	        pushd core0/us > /dev/null
                bin/configure --release
                make distr
                echo "X===================================== HERE ==================================================X"
	        popd > /dev/null
	    popd > /dev/null
	popd > /dev/null
}

function mk_target {
    local jail=$1
    local m=$2     #machine
    echo "ss_cache_dir={ss_cache_dir}"
    if [[ ! -d ${ss_cache_dir}/files ]]; then
        mkdir -p ${ss_cache_dir}/files
	    do_build_bin ${ss_cache_dir}/files
        if [[ $? -ne 0 ]]; then
            rm -rf ${ss_cache_dir}/files
            >&2 echo "KO 33028"
            exit 1
        fi
    fi
    #cp ${ss_cache_dir}/files/* ${jail}/
    #if [[ $? -ne 0 ]]; then
    #    rm -rf ${ss_cache_dir}
    #    >&2 echo "KO 33029"
    #    exit 1
    #fi
    ln -s /usr/local/bin/scriptv-gov ${jail}/usr/local/bin/${bin_gov}
    ln -s /usr/local/bin/scriptv-wallet ${jail}/usr/local/bin/${bin_wallet}
    if [[ $? -ne 0 ]]; then
        >&2 echo "KO 33029"
        exit 1
    fi
}
function mk_target__amend {
    local jail=$1
    local m=$2
}

function mk_target__constructor {
:
}

